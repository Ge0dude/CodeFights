#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Dec 13 09:57:45 2016

@author: brendontucker
"""

jobs = [15, 2, 14, 14, 14, 258] 
servers = 8
length = servers - 1

# jobs.sort(reverse = True) 

#output Matrix, could probably set this up better... but 
#hunting for the solution, elegance can come later

serverMatrix = [[0 for y in range(1)] for x in range(servers)]

serverLengthMatrix = [[0 for y in range(1)] for x in range(servers)]

#conditional entry length stuff here--special cases 0 1 ect
#to replace  values created

counter1 = 0
while counter1 <= (len(jobs) - 1):
    serverJob = max(jobs)
    position1 = jobs.index(max(jobs))
    position2 = serverLengthMatrix.index(min(serverLengthMatrix))
    if counter1 <= length:
        serverMatrix[position2][0] = position1
        serverLengthMatrix[position2][0] = jobs[position1]
        counter1 = counter1 + 1
    else:
        serverMatrix[position2].append(position1)
        serverLengthMatrix[position2][0] = serverLengthMatrix[position2][0] + jobs[position1]
        counter1 = counter1 + 1
    jobs[position1] = 0
    
if len(jobs) < servers:
    position3 = len(jobs) - servers
    while position3 < 0:
        serverMatrix[position3] = []
        position3 = position3 + 1
    
    
'''#function version below
def serverFarm(jobs, servers):
    
    length = servers - 1

    # jobs.sort(reverse = True) 

    #output Matrix, could probably set this up better... but 
    #hunting for the solution, elegance can come later
    serverMatrix = [[ 0 for y in range(1)] for x in range(servers)]

    serverLengthMatrix = [[0 for y in range(1)] for x in range(servers)]

    #conditional entry length stuff here--special cases 0 1 ect
    #to replace  values created

    counter1 = 0
    while counter1 <= (len(jobs) - 1):
        serverJob = max(jobs)
        position1 = jobs.index(max(jobs))
        position2 = serverLengthMatrix.index(min(serverLengthMatrix))
        if counter1 <= length:
            serverMatrix[position2][0] = position1
            serverLengthMatrix[position2][0] = jobs[position1]
            counter1 = counter1 + 1
        else:
            serverMatrix[position2].append(position1)
            serverLengthMatrix[position2][0] = serverLengthMatrix[position2][0] + jobs[position1]
            counter1 = counter1 + 1
        jobs[position1] = 0
        
    if len(jobs) < servers:
        position3 = len(jobs) - servers
        while position3 < 0:
            serverMatrix[position3] = []
            position3 = position3 + 1
        
    return serverMatrix

'''


'''
counter1 = 0
while counter1 <= (len(jobs) - 1):
    position = serverLengthMatrix.index(min(serverLengthMatrix))
    if counter1 <= length:
        serverMatrix[position][0] = counter1
        serverLengthMatrix[position][0] = jobs[counter1]
        counter1 = counter1 + 1
    else:
        serverMatrix[position].append(counter1)
        serverLengthMatrix[position][0] = serverLengthMatrix[position][0] + jobs[counter1]
        counter1 = counter1 + 1
'''  
    
    

'''
for x in jobs:
    position = serverLengthMatrix.index(min(serverLengthMatrix))
    position2 = jobs.index(x)
    if position2 <= length:
        serverMatrix[position][0] = position2
        serverLengthMatrix[position][0] = x
    else:
        serverMatrix[position].append(position2)    
        serverLengthMatrix[position][0] = serverLengthMatrix[position][0] + x
'''    
'''
for x in range(servers):
    serverMatrix[x][0] = x
    serverLengthMatrix[x][0] = jobs[x]
'''






    