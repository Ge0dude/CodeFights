#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Dec  8 10:28:49 2016

@author: brendontucker
"""


cities = 7
roads = [[3,1], 
 [1,6], 
 [2,5], 
 [4,2], 
 [2,0], 
 [0,1], 
 [3,5], 
 [5,1], 
 [5,4], 
 [6,3], 
 [1,2], 
 [2,6], 
 [6,0], 
 [6,5], 
 [4,3], 
 [2,3], 
 [4,6], 
 [5,0]]

def roadsBuilding(cities, roads):
    import itertools 
    cities = cities - 1
    length = cities
    if length == -1:
        return []
    elif length == 0:
        return roads
    elif length == 1:
        if roads == [0, 1]:
            return []
        else:
            return [0, 1]
    else:
        citiesList = list()
        while cities >= 0:
            citiesList.append(cities)
            cities = cities - 1

        list1 = list(itertools.combinations(citiesList, 2))
        length2 = len(list1)

        pos1 = 0
        big = 1
        small = 0
        for x in roads:
            if roads[pos1][0] > roads[pos1][1]:
                big = roads[pos1][0]
                small = roads[pos1][1]
                roads.remove(roads[pos1])
                roads.insert(pos1, [small, big])
                pos1 = pos1 + 1
            else:
                pos1 = pos1 + 1

        pos1 = 0
        while pos1 < length2:
            if list1[pos1][0] > list1[pos1][1]:
                big = list1[pos1][0]
                small = list1[pos1][1]
                list1.remove(list1[pos1])
                list1.insert(pos1, [small, big])
                pos1 = pos1 + 1
            else:
                pos1 = pos1 + 1

        pos1 = 0
        pos2 = 0
        while pos2 < len(roads):
            pos1 = 0
            while pos1 < length2:
                if list1[pos1] == roads[pos2]:
                    list1.remove(list1[pos1])
                    length2 = len(list1)
                    pos1 = pos1
                else:
                    pos1 = pos1 + 1
            pos2 = pos2 + 1
        
        list1.sort()
        return list1

