#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Sat Mar 25 13:48:52 2017

@author: brendontucker
"""
import collections
#nned to make some test data 
emails =["a@rain.ifmo.ru", 
 "b@rain.ifmo.ru", 
 "c@rain.ifmo.ru", 
 "d@rain.ifmo.ru", 
 "e@rain.ifmo.ru", 
 "f@rain.ifmo.ru", 
 "g@rain.ifmo.ru", 
 "h@rain.ifmo.ru", 
 "i@rain.ifmo.ru", 
 "j@rain.ifmo.ru", 
 "k@rain.ifmo.ru", 
 "l@rain.ifmo.ru", 
 "m@rain.ifmo.ru", 
 "n@rain.ifmo.ru", 
 "o@rain.ifmo.ru", 
 "p@rain.ifmo.ru", 
 "q@rain.ifmo.ru", 
 "r@rain.ifmo.ru", 
 "s@rain.ifmo.ru", 
 "t@rain.ifmo.ru", 
 "u@rain.ifmo.ru", 
 "v@rain.ifmo.ru", 
 "w@rain.ifmo.ru", 
 "x@rain.ifmo.ru", 
 "y@rain.ifmo.ru", 
 "a@mit.edu.ru", 
 "b@mit.edu.ru", 
 "c@mit.edu.ru", 
 "d@mit.edu.ru", 
 "e@mit.edu.ru", 
 "f@mit.edu.ru", 
 "g@mit.edu.ru", 
 "h@mit.edu.ru", 
 "i@mit.edu.ru", 
 "j@mit.edu.ru", 
 "k@mit.edu.ru", 
 "l@mit.edu.ru", 
 "m@mit.edu.ru", 
 "n@mit.edu.ru", 
 "o@mit.edu.ru"]

def domainDictGenerator(emailList): 
 
    domainNameDict = dict()
    
    # just a tester line domainNameDict['@mit.edu'] = 1
    emailCounter = 0 
    while emailCounter < len(emailList) :
        backCounter = len(emailList[emailCounter]) - 1
        while backCounter > 0:
            if emails[emailCounter][backCounter] == '@':
                atLocation = backCounter
                domainName = emailList[emailCounter][atLocation + 1:len(emails[emailCounter])]
                if domainName in domainNameDict:
                    domainNameDict[domainName] += 20
                else:
                    domainNameDict[domainName] = 20
                break
            else:
                backCounter -= 1 
        emailCounter += 1
        
    return domainNameDict
    
#thedict = domainDictGenerator(emails)
#thedict['@new.dug'] = 303


def gigabyteConverter(thedict):

    for x in thedict:
        if thedict[x] >= 500:
            thedict[x] = 25
        elif thedict[x] < 500 and thedict[x] >= 300 :
            thedict[x] = 15
        elif thedict[x] < 300 and thedict[x] >= 200 :
            thedict[x] = 8
        elif thedict[x] < 200 and thedict[x] >= 100 :
            thedict[x] = 3
        else:
            thedict[x] = 0
            
    return thedict
        
        
#tester = gigabyteConverter(domainDictGenerator(emails))

def campusCup(unOrderedDict):
    theDict = domainDictGenerator(unOrderedDict)
    convertedDict = gigabyteConverter(theDict)
    orderedTester = collections.OrderedDict(sorted(convertedDict.items()))
    keyList = []
    for x in orderedTester:
        keyList.append(x)
    valueList = []
    for x in orderedTester:
        valueList.append(orderedTester[x])
    
    outputList = []
    
    
    while len(valueList) > 0:
        temp = max(valueList)
        position = valueList.index(temp)
        outputList.append(keyList[position])
        valueList.pop(position)
        keyList.pop(position)
        
    return outputList
    
print(campusCup(emails))



#==============================================================================
#         
# orderedTester = collections.OrderedDict(sorted(tester.items()))
#     keyList = []
#     for x in orderedTester:
#         keyList.append(x)
#     valueList = []
#     for x in orderedTester:
#         valueList.append(orderedTester[x])
#     
#     outputList = []
#     
#     
#     while len(valueList) > 0:
#         temp = max(valueList)
#         position = valueList.index(temp)
#         outputList.append(keyList[position])
#         valueList.pop(position)
#         keyList.pop(position)
#==============================================================================
